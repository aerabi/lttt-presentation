@article{capretta_valentini_1999, title={A general method for proving the normalization theorem for first and second order typed $\lambda$-calculi}, volume={9}, DOI={10.1017/S0960129599002923}, number={6}, journal={Mathematical Structures in Computer Science}, publisher={Cambridge University Press}, author={Capretta, Venanzio and Valentini, Silvio}, year={1999}, pages={719–739}}

@article{REYNOLDS19931,
title = "On Functors Expressible in the Polymorphic Typed Lambda Calculus",
journal = "Information and Computation",
volume = "105",
number = "1",
pages = "1--29",
year = "1993",
issn = "0890-5401",
doi = "https://doi.org/10.1006/inco.1993.1037",
url = "http://www.sciencedirect.com/science/article/pii/S0890540183710370",
author = "J.C. Reynolds and G.D. Plotkin",
abstract = "Given a model of the polymorphic typed lambda calculus based upon a Cartesian closed category K, there will be functors from K to K whose action on objects can be expressed by type expressions and whose action on morphisms can be expressed by ordinary expressions. We show that if T is such a functor then there is a weak initial T-algebra and if, in addition, K possesses equalizers of all subsets of its morphism sets, then there is an initial T-algebra. These results are used to establish the impossibility of certain models, including those in which types denote sets and S → S′ denotes the set of all functions from S to S′."
}

@incollection{PRAWITZ1971235,
title = "Ideas and Results in Proof Theory",
editor = "J.E. Fenstad",
series = "Studies in Logic and the Foundations of Mathematics",
publisher = "Elsevier",
volume = "63",
pages = "235--307",
year = "1971",
booktitle = "Proceedings of the Second Scandinavian Logic Symposium",
issn = "0049-237X",
doi = "https://doi.org/10.1016/S0049-237X(08)70849-8",
url = "http://www.sciencedirect.com/science/article/pii/S0049237X08708498",
author = "Dag Prawitz",
abstract = "Publisher Summary
This chapter presents an exposition of certain themes in proof theory. The chapter discusses ideas behind what may be called Gentzen-type analysis in proof theory, where in particular, one wants to draw attention to the fact that they constitute the embryo to a general proof theory; extensions of the results obtained by Gentzen to more powerful theories; and the connection between proofs and the terms used in functional interpretations of intuitionistic logic, in particular, the connection between Gentzen-type analysis and the Gödel-type analysis that originated with Godel's socalled Dialectica interpretation. A notion of validity of derivations is presented that may be contemplated as a possible explication of Gentzen's ideas about an operational interpretation of the logical constants. Proofs of the results have shown how this notion of validity may be used as a convenient tool to establish the main result about strong normalization in first order logic."
}

@phdthesis{girard1972phd,
  title={Interpr{\'e}tation fonctionnelle et {\'e}limination des coupures de l'arithm{\'e}tique d'ordre sup{\'e}rieur},
  author={Girard, Jean-Yves},
  year={1972},
  school={{\'E}diteur inconnu}
}

@inproceedings{reynolds1983types,
  title={Types, abstraction and parametric polymorphism},
  author={Reynolds, John C},
  booktitle={Information Processing 83, Proceedings of the IFIP 9th World Computer Congres},
  pages={513--523},
  year={1983}
}

@article{BOHM1985135,
title = "Automatic synthesis of typed {$\Lambda$}-programs on term algebras",
journal = "Theoretical Computer Science",
volume = "39",
pages = "135 - 154",
year = "1985",
note = "Third Conference on Foundations of Software Technology and Theoretical Computer Science",
issn = "0304-3975",
doi = "https://doi.org/10.1016/0304-3975(85)90135-5",
url = "http://www.sciencedirect.com/science/article/pii/0304397585901355",
author = "Corrado Böhm and Alessandro Berarducci",
abstract = "The notion of iteratively defined functions from and to heterogeneous term algebras is introduced as the solution of a finite set of equations of a special shape. Such a notion has remarkable consequences: (1) Choosing the second-order typed lamdda-calculus ($\Lambda$ for short) as a programming language enables one to represent algebra elements and iterative functions by automatic uniform synthesis paradigms, using neither conditional nor recursive constructs. (2) A completeness theorem for $\Lambda$-terms with type of degree at most two and a companion corollary for $\Lambda$-programs have been proved. (3) A new congruence relation for the last-mentioned $\Lambda$-terms which is stronger than $\Lambda$-convertibility is introduced and proved to have the meaning of a $\Lambda$-program equivalence. Moreover, an extension of the paradigms to the synthesis of functions of higher complexity is considered and exemplified. All the concepts are explained and motivated by examples over integers, list- and tree-structures."
}

@InProceedings{reynold-not-set-theoretic,
author="Reynolds, John C.",
editor="Kahn, Gilles
and MacQueen, David B.
and Plotkin, Gordon",
title="Polymorphism is not set-theoretic",
booktitle="Semantics of Data Types",
year="1984",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="145--156",
abstract="The polymorphic, or second-order, typed lambda calculus is an extension of the typed lambda calculus in which polymorphic functions can be defined. In this paper, we will prove that the standard set-theoretic model of the ordinary typed lambda calculus cannot be extended to model this language extension.",
isbn="978-3-540-38891-3"
}

@article{plotkin-non-existing-article,
author="Plotkin, G. D.",
title="Private communication",
year="1984"
}